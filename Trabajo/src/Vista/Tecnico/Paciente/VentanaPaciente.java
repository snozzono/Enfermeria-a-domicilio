package Vista.Tecnico.Paciente;

import Controlador.BBDDDAO;
import Controlador.PacienteDAO;
import Controlador.TecnicoDAO;
import Modelo.BBDD;
import Modelo.Paciente;
import Modelo.Tecnico;
import Vista.Administrador.Cpanel;
import Vista.VentanaPrincipal;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

public class VentanaPaciente extends javax.swing.JFrame {

    BBDD bd = new BBDD();
    BBDDDAO bdao = new BBDDDAO();
    PacienteDAO pacDAO = new PacienteDAO();
    Paciente paciente = new Paciente();

    /**
     * Creates new form VentanaPaciente
     */
    public VentanaPaciente() {
        initComponents();
        llenarjtTable();
        llenarjbcPacientes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPaciente = new javax.swing.JTable();
        jbcPacientes = new javax.swing.JComboBox<>();
        btnVolver = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        jbTraspasar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEliminar.setText("dar de alta");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jtPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "run del paciente", "nombre", "diagnostico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtPaciente);

        jbcPacientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        jbcPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcPacientesActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar por RUN");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jbTraspasar.setText("Traspasar paciente");
        jbTraspasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTraspasarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jbcPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbTraspasar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(jbcPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbTraspasar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(btnVolver)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        String run = (String) jbcPacientes.getSelectedItem();
        if (pacDAO.obtenerTodos().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No hay pacientes para eliminar");
        } else {
            if (run == null) {
                JOptionPane.showMessageDialog(rootPane, "Elija el rut de algún paciente para darlo de alta");
            } else {
                try {
                    String pepe = pacDAO.buscarPac(Integer.parseInt(run)).getNombre_p();
                    pacDAO.eliminarPaciente(run);
                    JOptionPane.showMessageDialog(rootPane, (pepe + " ha sido dado de alta"));
                    llenarjtTable();
                    llenarjbcPacientes();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(VentanaPaciente.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }


     }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        if (bdao.buscar().getOrigen() == 1) {
            VentanaPrincipal VP = new VentanaPrincipal();

            VP.setResizable(false);
            VP.setLocationRelativeTo(null);
            VP.setTitle("Inicio");
            VP.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

            VP.setVisible(true);
            dispose();
        } else if (bdao.buscar().getOrigen() == 2) {
            Cpanel VAIE = new Cpanel();

            VAIE.setResizable(false);
            VAIE.setLocationRelativeTo(null);
            VAIE.setTitle("Técnicos");
            VAIE.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

            VAIE.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnVolverActionPerformed


    private void jbcPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcPacientesActionPerformed

    }//GEN-LAST:event_jbcPacientesActionPerformed

    public void llenarjbcPacientes() {
        jbcPacientes.setEnabled(true);
        jbcPacientes.removeAllItems();
        ArrayList<Paciente> listaPacientes = pacDAO.obtenerTodos();
        for (Paciente temp : listaPacientes) {
            jbcPacientes.addItem(String.valueOf(temp.getRun_pac()));
        }
    }

    public void llenarjtTable() {
        DefaultTableModel modelo = (DefaultTableModel) jtPaciente.getModel();
        modelo.setRowCount(0); // Limpiar tabla
        ArrayList<Paciente> lista = pacDAO.obtenerTodos();
        for (Paciente tmp : lista) {
            modelo.addRow(new Object[]{tmp.getRun_pac(), tmp.getNombre_p(), tmp.getDiagn()});
        }
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {

            DefaultTableModel modelo = (DefaultTableModel) this.jtPaciente.getModel();
            modelo.setRowCount(0); // Limpiar tabla
            String textoBuscar = txtBuscar.getText().trim();

            if (textoBuscar.isEmpty()) {

                ArrayList<Paciente> lista = pacDAO.obtenerTodos();
                for (Paciente tmp : lista) {
                    modelo.addRow(new Object[]{tmp.getRun_pac(), tmp.getNombre_p(), tmp.getDiagn()});
                }
                llenarjbcPacientes();
                if (lista.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Este tecnico no tiene pacientes registrados");
                }
            } else {
                int runTec = Integer.parseInt(textoBuscar);
                Paciente paci = pacDAO.buscarPac(runTec);
                if (paci != null) {
                    jbcPacientes.removeAllItems();
                    modelo.addRow(new Object[]{paci.getRun_pac(), paci.getNombre_p(), paci.getDiagn()});
                    jbcPacientes.addItem(String.valueOf(paci.getRun_pac()));
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró un paciente con el RUN ingresado.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    jbcPacientes.removeAllItems();
                }
            }

        } catch (NumberFormatException e) {
            // Mostrar mensaje si el texto ingresado no es un número
            JOptionPane.showMessageDialog(this, "Ingrese un número válido en el campo de búsqueda.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (HeadlessException e) {
            // Capturar errores generales para evitar bloqueos
            JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jbTraspasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTraspasarActionPerformed

        DefaultComboBoxModel<Integer> comboModel = new DefaultComboBoxModel();

        TecnicoDAO TDAO = new TecnicoDAO();
        ArrayList<Tecnico> listaTecnicos = TDAO.obtenerTodos();
        for (Tecnico temp : listaTecnicos) {
            comboModel.addElement(temp.getRun_tec());
        }

        JComboBox<Integer> comboBox = new JComboBox<>(comboModel);
        int resultado = JOptionPane.showConfirmDialog(this, comboBox, "Selecciona una opción", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resultado == JOptionPane.OK_OPTION) {
            int seleccion = (Integer) comboBox.getSelectedItem();

            if (resultado == JOptionPane.OK_OPTION) {

                int buffer = Integer.parseInt((String) jbcPacientes.getSelectedItem());

                bd.setPaciente(seleccion);
                bdao.modificarPaciente(bd);

                Paciente pacnuevo = pacDAO.buscarPac(buffer);
                pacnuevo.setTec_run_tec(seleccion);

                pacDAO.modificarPaciente(pacnuevo, buffer);

                JOptionPane.showMessageDialog(rootPane, "Run cambiado");
                llenarjbcPacientes();
                llenarjtTable();

                String pepe = String.valueOf(seleccion);

                JOptionPane.showMessageDialog(this, "Has seleccionado" + seleccion, "Seleccion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se realizó ninguna selección", "Cancelado", JOptionPane.WARNING_MESSAGE);
            }

            llenarjtTable();
            llenarjbcPacientes();

    }//GEN-LAST:event_jbTraspasarActionPerformed
    }

    /**
         * @param args the command line arguments
         */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbTraspasar;
    private javax.swing.JComboBox<String> jbcPacientes;
    private javax.swing.JTable jtPaciente;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
